<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>
    <script>
		$( document ).ready(function() {
		console.log( "ready!" );
		
		var $cineResults = $('.cineResults'); 		// div mit der Klasse cineResults selektiert
		var $movieResults = $('.movieResults'); 	// div mit der Klasse movieResults selektiert
		var $timeResults = $('.timeResults');		// div mit der Klasse timeResults selektiert		
		
		var priority = [];
		
		var proposal = {
							"userID" : "",
							"kinoID" : "",
							"filmID" : "",
							"spielplanID" : "",
							"day" : [],
							"time" : "",
							"kommentare" : ""
						};
		
		// Die mit pickResult() ausgewählten Elemente
		var proposalPrio0listPoint = "";
		var proposalPrio1listPoint = "";
		var proposalPrio2listPoint = "";
		
		var timeSet = false;

		// Nachdem ein mit pickResult() ausgewähltes Element an priority[x].list übergeben wurde, 
		// soll der vorherige Inhalt von priority[x].list nicht verloren gehen. 
		// Der Inhalt wird noch gebraucht, um eine Auswahländerung des Users möglich zu machen.
		var tmpCache = "";	
		
		// Schleife zum initialisieren der Arrayfelder ( Benötigt für die Funktion priorityVisualise )
		for(var i = 0; i < 3; i++){
			priority[i] =	{	
								"searchPointer" : "",
								"list" : "",
								"classPointer" : ""
							};
		}	
		
		var counter = 0;
		
		var activeDefineProposal = false;
		
		var resetPrio12 = false;	// Wenn true -> PriorityVisualise entfernt die Klassen prio 1 und 2
		var resetPrio2 = false;		// Wenn true -> PriorityVisualise entfernt die Klasse prio2
		
		function priorityCount(newSearchPointer){
			if(priority[0].searchPointer == newSearchPointer){
				counter = 0;
			}
			if(counter == 2){
				if( (priority[1].searchPointer == newSearchPointer) || (priority[2].searchPointer == newSearchPointer) ){	// Bei wiederholter gleicher Suche soll der counter nicht hochzählen
					return;
				}
			}
			if(counter < 3){
				counter++;
				console.log("Counter: "+counter);
				
			} 
			if(counter == 3){
				counter = 1; // nicht 0, da die 1. Priorität beibehalten werden soll.	
				console.log("Counter-Set: "+counter);
			}
			
		}
		
		function refreshPage(newSearchPointer, newList, newClass){	// Vielleicht besser in updateResults umbenennen?
			
			// Overview - searchPointer:
			// 0 == cineSearch
			// 1 == movieSearch
			// 2 == timeSearch					
			
			priority[counter] = {	
									"searchPointer" : newSearchPointer,
									"list" : newList,
									"classPointer" : newClass
								};			
			

			if(priority[0].searchPointer == newSearchPointer){ // Für den Fall, dass die Liste von priority[0] geändert werden soll.
				priority[0].list = newList;
				priority[1].searchPointer = "";
				priority[1].classPointer = "";
				priority[2].searchPointer = "";
				priority[2].classPointer = "";
				resetPrio12 = true;	// priorityVisualise soll die prio Klassen 1 und 2 reseten
			}
			
			if(counter > 0 && priority[1].searchPointer == newSearchPointer){ // Für den Fall, dass die Liste von priority[1] geändert werden soll.
				counter = 1;
				priority[1].list = newList;
				priority[2].searchPointer = "";
				resetPrio2 = true;	// priorityVisualise soll die Klasse prio2 reseten				
			}
			
			var listCache0 = priority[0].list;
			
			if(counter == 0){
				priorityCount(newSearchPointer);
				return listCache0;
			}			
			
			if( counter == 1 && priority[1].searchPointer == newSearchPointer && priority[0].searchPointer != newSearchPointer ){ 
				// priority[0].searchPointer != newSearchPointer -> falls eine Veränderung in der selben Suche vorgenommen wird,
				// sollen die Ergebnisse sich nicht anhand der vorherigen Ergebnisse updaten
				// anders gesagt: wenn der neue searchPointer ein anderer ist als der erste, dann führe aus
				
				
				var listCache1 = [];		// Array für aktualisierte Ergebnisliste
				
				if(	proposalPrio0listPoint != ""){
					tmpCache = priority[0].list;
					priority[0].list = [proposalPrio0listPoint];
					console.log("proposalPrio0listPoint: "+JSON.stringify(proposalPrio0listPoint));
					console.log("Counter 1 und priority[0].list: "+JSON.stringify(priority[0].list));
				}
	
				for( var prio0ListPoint in priority[0].list ) {
				
					for( var prio1ListPoint in priority[1].list ) {
						
						if( priority[0].list[prio0ListPoint].hasOwnProperty('filmID') && priority[1].list[prio1ListPoint].hasOwnProperty('filmID') ){
					
							if( priority[0].list[prio0ListPoint].filmID == priority[1].list[prio1ListPoint].filmID ){
								
								listCache1.push(priority[1].list[prio1ListPoint]);
							}
							continue;
							
						}
						else if( ( priority[0].list[prio0ListPoint].hasOwnProperty('filmID') && !(priority[0].list[prio0ListPoint].hasOwnProperty('spielplanID')) && !(priority[1].list[prio1ListPoint].hasOwnProperty('filmID')) ) || ( priority[0].list[prio0ListPoint].hasOwnProperty('kinoID') && !(priority[1].list[prio1ListPoint].hasOwnProperty('kinoID')) ) ){	// Keine filmID -> Kinodaten
							
							var filmID = "";
							var kinoID = "";
							
							if(priority[0].list[prio0ListPoint].hasOwnProperty('filmID')){
								filmID = JSON.stringify(priority[0].list[prio0ListPoint].filmID);
								kinoID = JSON.stringify(priority[1].list[prio1ListPoint].kinoID);
							}
							if(priority[0].list[prio0ListPoint].hasOwnProperty('kinoID')){
								kinoID = JSON.stringify(priority[0].list[prio0ListPoint].kinoID);
								filmID = JSON.stringify(priority[1].list[prio1ListPoint].filmID);
							}
							
							console.log("Before AJAX");
							
							$.ajax({
								url: '/spielplaene',
								method: 'GET',
								async: false,
								data: 'kinoID='+kinoID+'&filmID='+filmID,
								contentType: 'application/json',
								success: function(spielplan) {

									if(spielplan.length != 0){	// Aktuelle Kalenderwoche evtl. mit einbeziehen
										listCache1.push(priority[1].list[prio1ListPoint]);
										console.log("AJAX-Call: Success! - prio0ListPoint: "+prio0ListPoint+" prio1ListPoint: "+prio0ListPoint);
									}

								}
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});
								
							continue;

						}
						else if( (priority[0].list[prio0ListPoint].hasOwnProperty('spielplanID') && priority[1].list[prio1ListPoint].hasOwnProperty('spielplaene')) || (priority[0].list[prio0ListPoint].hasOwnProperty('spielplaene') && priority[1].list[prio1ListPoint].hasOwnProperty('spielplanID'))){
						
							var spielplanID = "";
							var spielplaene = [];
	
							if(priority[0].list[prio0ListPoint].hasOwnProperty('spielplanID')){
								spielplanID = JSON.stringify(priority[0].list[prio0ListPoint].spielplanID);
								spielplaene = JSON.stringify(priority[1].list[prio1ListPoint].spielplaene);
							}
							if(priority[0].list[prio0ListPoint].hasOwnProperty('spielplaene')){
								spielplaene = JSON.stringify(priority[0].list[prio0ListPoint].spielplaene);
								spielplanID = JSON.stringify(priority[1].list[prio1ListPoint].spielplanID);
							}
									
							for( var spielplan in spielplaene ){
								if(spielplanID == spielplaene[spielplan]){
									if($.inArray(priority[1].list[prio1ListPoint], listCache1) == -1){	// Bedingung - Keine doppelten Einträge (-1 == Eintrag nicht vorhanden)
										console.log("spielplanID:"+spielplanID+"\nspielplan:"+spielplaene[spielplan]);							
										listCache1.push(priority[1].list[prio1ListPoint]);
										break;
									}	
								}
							}								
						
						}
						
					}				
				}
				priority[0].list = tmpCache;
				priorityCount(newSearchPointer);
				priority[1].list = listCache1;	//Priority[2] soll sich an die aktualisierte Liste orientieren
				return priority[1].list;	
			}
			// Wenn der Counter 2 ist, dann an den listCache1 orientieren und nicht an die newList
			if( counter == 2 && priority[2].searchPointer == newSearchPointer && priority[0].searchPointer != newSearchPointer ){
					
				var listCache2 = [];
				
				if(	proposalPrio1listPoint != ""){
					tmpCache = priority[1].list;
					priority[1].list = [proposalPrio1listPoint];
					console.log("proposalPrio1listPoint: "+JSON.stringify(proposalPrio1listPoint));
					console.log("Counter 2 und priority[1].list: "+JSON.stringify(priority[1].list));
				}				
						
				for( var prio1ListPoint in priority[1].list ) {
				
					for( var prio2ListPoint in priority[2].list ) {

						if( priority[1].list[prio1ListPoint].hasOwnProperty('filmID') && priority[2].list[prio2ListPoint].hasOwnProperty('filmID') ){
					
							if( priority[1].list[prio1ListPoint].filmID == priority[2].list[prio2ListPoint].filmID ){
							
								listCache2.push(priority[2].list[prio2ListPoint]);
							}
							continue;
							
						}
						else if( ( priority[1].list[prio1ListPoint].hasOwnProperty('filmID') && !(priority[1].list[prio1ListPoint].hasOwnProperty('spielplanID')) && !(priority[2].list[prio2ListPoint].hasOwnProperty('filmID')) ) || ( priority[1].list[prio1ListPoint].hasOwnProperty('kinoID') && !(priority[2].list[prio2ListPoint].hasOwnProperty('kinoID')) ) ){	// Keine filmID -> Kinodaten
							
							var filmID = "";
							var kinoID = "";
							
							if(priority[1].list[prio1ListPoint].hasOwnProperty('filmID')){
								filmID = JSON.stringify(priority[1].list[prio1ListPoint].filmID);
								kinoID = JSON.stringify(priority[2].list[prio2ListPoint].kinoID);
							}
							if(priority[1].list[prio1ListPoint].hasOwnProperty('kinoID')){
								kinoID = JSON.stringify(priority[1].list[prio1ListPoint].kinoID);
								filmID = JSON.stringify(priority[2].list[prio2ListPoint].filmID);
							}
							
							console.log("Before AJAX");
							
							$.ajax({
								url: '/spielplaene',
								method: 'GET',
								async: false,								
								data: 'kinoID='+kinoID+'&filmID='+filmID,
								contentType: 'application/json',
								success: function(spielplan) {

									if(spielplan.length != 0){	// Kalenderwoche evtl. mit einbeziehen
										listCache2.push(priority[2].list[prio2ListPoint]);
										console.log("AJAX-Call: Success!");
									}

								}
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});
							continue;

						}
						else if( (priority[1].list[prio1ListPoint].hasOwnProperty('spielplanID') && priority[2].list[prio2ListPoint].hasOwnProperty('spielplaene')) || (priority[1].list[prio1ListPoint].hasOwnProperty('spielplaene') && priority[2].list[prio2ListPoint].hasOwnProperty('spielplanID'))){
						
							var spielplanID = "";
							var spielplaene = [];
	
							if(priority[1].list[prio1ListPoint].hasOwnProperty('spielplanID')){
								spielplanID = JSON.stringify(priority[1].list[prio1ListPoint].spielplanID);
								spielplaene = JSON.stringify(priority[2].list[prio2ListPoint].spielplaene);
							}
							if(priority[1].list[prio1ListPoint].hasOwnProperty('spielplaene')){
								spielplaene = JSON.stringify(priority[1].list[prio1ListPoint].spielplaene);
								spielplanID = JSON.stringify(priority[2].list[prio2ListPoint].spielplanID);
							}
								
							for( var spielplan in spielplaene ){
								if(spielplanID == spielplaene[spielplan]){
									if($.inArray(priority[2].list[prio2ListPoint], listCache2) == -1){	// Bedingung - Keine doppelten Einträge (-1 == Eintrag nicht vorhanden)								
										console.log("spielplanID:"+spielplanID+"\nspielplan:"+spielplan);							
										listCache2.push(priority[2].list[prio2ListPoint]);
										break;
									}
								}
							}
							
							// Prüfung, ob nur Spielpläne gezeigt werden, die auch den Ergebnissen der Filmsuche zugehörig sind, bei folgender Suchreihenfolge:
							// movieSearch -> cineSearch -> timeSearch
							if(priority[2].list[prio2ListPoint].hasOwnProperty('spielplanID') && (listCache2.length > 0)){		// Wenn die cineSearch priority[1] hat und nun nach Spielplänen gesucht wird, kann die priority[0] nur bei der movieSearch liegen.			
								var foundID = false;

								var index = listCache2.indexOf(priority[2].list[prio2ListPoint]);
								console.log("Index: "+index);
								if(index > -1) {
									for( var movie in priority[0].list ){
										if(priority[0].list[movie].filmID == listCache2[index].filmID){
											foundID = true;
											break;
										}									
									}
									if(foundID == false){
										listCache2.splice(index, 1);
									}
								}
							}
						
						}
						
					}				
				}
				priority[1].list = tmpCache;
				priorityCount(newSearchPointer);
				priority[2].list = listCache2;
				return priority[2].list;	
			}
			console.log("End");
			priorityCount(newSearchPointer);						
			return newList; // Es gab keine Änderung	
			
		};
		
		
		function priorityVisualise(){

			// Overview - classPointer:
			// 0 == cineBox
			// 1 == movieBox
			// 2 == timeBox						
			
			for(var i = 0; i < 3; i++){
				for(var j = 0; j < 3; j++){
					if(priority[i].searchPointer !== '' && priority[i].searchPointer == j){				
						for(var k = 0; k < 3; k++){
							if( $('div'+priority[i].classPointer).filter($( "[class$='prio"+k+"']" )).length ){
								$('div'+priority[i].classPointer).filter($( "[class$='prio"+k+"']" )).removeClass("prio"+k);
							}
						}
						if( $('div').filter($( "[class$='prio"+i+"']" )).length ){	// Überprüfen, ob jeweilige Klasse bereits geadded wurde.
							$('div').filter($( "[class$='prio"+i+"']" )).removeClass("prio"+i);							
						}					
						$(priority[i].classPointer).addClass( "prio"+i );
					}	
				}
			}
			
			if(resetPrio12 == true){				
				for(var i = 1; i < 3; i++){
					if( $('div').filter($( "[class$='prio"+i+"']" )).length ){
						$('div').filter($( "[class$='prio"+i+"']" )).children("[class$='Results']").empty(); // Entferne auch die Suchergebnisse der prio 1 und 2 untergeordneten Listen
						$('div').filter($( "[class$='prio"+i+"']" )).removeClass("prio"+i);
					}
				}			
				resetPrio12 = false;
			}
			if(resetPrio2 == true){				
					if( $('div').filter($( "[class$='prio2']" )).length ){
						$('div').filter($( "[class$='prio2']" )).children("[class$='Results']").empty();					
						$('div').filter($( "[class$='prio2']" )).removeClass("prio2");
					}						
				resetPrio2 = false;
			}			
			
		}
		
		function pickResult(){
		
			var pickedResult = false;
			
			if( $( 'div' ).filter($( "[class$='prio0']" )).length ){
			
				var classPointer = priority[0].classPointer.split(".");	// Bsp.: String == .category.cineBox wird gesplitted in [".","category","cineBox"]
				
				console.log(priority[0].classPointer);
				console.log(classPointer);
				
				var prio0Class = classPointer[2];	
				
				console.log("prio0Class: "+prio0Class);
				
				var stringComponent = prio0Class.slice(0, -3);	// Bsp.: Schneidet "Box" von "cineBox" ab - String: "cine"
				
				console.log(stringComponent);		
				
				var element0ID = "";
				var element1ID = "";
				var element2ID = "";
				
				var kinoResponse = [];		
				var filmResponse = [];	
				var spielplanResponse = [];
				var ajaxGetFilm = "";
				var ajaxGetKino = "";				

				$( "li[class^='"+stringComponent+"']" ).addClass( "selectResult" );				
				
				$( "li[class^='"+stringComponent+"']" ).click(function() {
				
					$(".proposalInfo").empty();

					console.log( $( this ).attr("class") );
					
					var element0Array = $( this ).attr("class").split(" ");
					var element0 = element0Array[1];
					var element0SplittedArray = element0.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
					
					element0ID = element0SplittedArray[2];					
					console.log("ElementID: "+element0ID);
					
					proposalPrio0listPoint = priority[0].list[element0ID];	// Speichern des Listen-Inhalts
					
					var element1Array = "";
					var element1 = "";
					var element1SplittedArray = "";
					var element2Array = "";
					var element2 = "";
					var element2SplittedArray = "";						
					
					$( "li" ).removeClass("selectedResult");
					$( "."+element0 ).addClass("selectedResult");
					
					$( "div.proposal0" ).remove();
					$( "div.proposal1" ).remove();
					$( "div.proposal2" ).remove();					

					kinoResponse = [];		
					filmResponse = [];	
					spielplanResponse = [];
					ajaxGetFilm = "";
					ajaxGetKino = "";
					
					if( stringComponent == "cine" ){
										
						proposal.kinoID = proposalPrio0listPoint.kinoID;										
						$( "div.defineProposalContent" ).append('<div class="proposal0">'+
																	'Kino: '+proposalPrio0listPoint.bezeichnung+
																	'</br>Straße: '			+proposalPrio0listPoint.straße+
																	'</br>Ort: '			+proposalPrio0listPoint.ort+
																	'</br>PLZ: '			+proposalPrio0listPoint.plz+
																	'</br>Kinotag: '		+proposalPrio0listPoint.kinotag+
																	'</br>Reservierung: '	+proposalPrio0listPoint.reservierungsHotline+
																	'</br>Preise: '			+proposalPrio0listPoint.preise+
																	'</br>Bewertung: '		+proposalPrio0listPoint.bewertung+
																	'</br>Website: <a href="'+proposalPrio0listPoint.website+'">'+proposalPrio0listPoint.website+'</a>'+
																'</div>');
						console.log('kinoID='+proposalPrio0listPoint.kinoID);										
																
						function getSpielplaeneKinoID(){
							return $.ajax({
										url: '/spielplaene',
										method: 'GET',
										async: false,
										data: 'kinoID='+proposalPrio0listPoint.kinoID,
										contentType: 'application/json',
									}).done(function (response) {
											console.log("spielplaene: "+response);
											spielplanResponse = response;
									}).fail(function () {
										console.log('Error!');
										alert('Error!');
									});
						};
						
						function getFilm(index) {
							return $.ajax({
										url: '/filme',
										method: 'GET',
										async: false,
										data: 'filmID='+spielplanResponse[index].filmID,
										contentType: 'application/json',
									}).done(function (response) {
										filmResponse.push(response[0]); // response ist ein array - wir wollen kein array in ein array übergeben, daher response[0]
										console.log("filme: "+filmResponse);
										console.log("Response: "+response);
									}).fail(function () {
										console.log('Error!');
										alert('Error!');
									});
						};
				
						$.when( getSpielplaeneKinoID() ).done( function(){

							for(var spielplan in spielplanResponse){
						
								console.log("test");
								console.log(JSON.stringify(spielplanResponse[spielplan].filmID));
							
								ajaxGetFilm = getFilm(spielplan);	
							}

							$.when( ajaxGetFilm ).done( function(){
								$timeResults.empty();
								$movieResults.empty();
								
								$.each(spielplanResponse, function(i, spielplan) {
									$timeResults.append('<li class="timeResult time-resultID-'+ i +' selectResult">SpielplanID: '+spielplan.spielplanID+
															'</br>Spielzeiten'+
															'</br>Mo: '			+spielplan.mo+
															'</br>Di: '			+spielplan.di+
															'</br>Mi: '			+spielplan.mi+
															'</br>Do: '			+spielplan.do+
															'</br>Fr: '			+spielplan.fr+
															'</br>Sa: '			+spielplan.sa+
															'</br>So: '			+spielplan.so+
															'</br>Überlaenge: ' +(spielplan.ueberlaenge == true ? 'Ja' : 'Nein')+
															'</br>In 3D: '		+(spielplan.in3D == true ? 'Ja' : 'Nein')+
														'</li>');
								});	
								$.each(filmResponse, function(i, film) {
									$movieResults.append('<li class="movieResult movie-resultID-'+ i +' selectResult">Film :'+film.deTitel+
															'</br>Genre: '				+film.genre+
															'</br>Regie: '				+film.regie+
															'</br>Dauer: '				+film.dauer+
															'</br>Erscheinungstermin: '	+film.erscheinungstermin+	
														'</li>');
								});
								
								pointerView();

								if( !($( 'div' ).filter($( "[class$='prio1']" )).length) || ($( 'div' ).filter( ".category.movieBox.prio1" ).length) ){
									
									if( $( 'div' ).filter($( "[class$='prio2']" )).length ){
										$( "li[class^='time']" ).removeClass( "selectResult" );
									}
									
									$( "li[class^='movie']" ).click(function() {
									
										$( "li[class^='time']" ).removeClass( "selectResult" );
									
										priority[1].searchPointer = 1;
										priority[1].classPointer = ".category.movieBox";
										priority[1].list = filmResponse;
										priority[2].searchPointer = 2;
										priority[2].classPointer = ".category.timeBox";
										priority[2].list = spielplanResponse;
										
										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
										$(priority[1].classPointer).addClass( "prio1" );
										$(priority[2].classPointer).addClass( "prio2" );
										
										console.log( $( this ).attr("class") );
					
										element1Array = $( this ).attr("class").split(" ");
										element1 = element1Array[1];
										element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
										
										element1ID = element1SplittedArray[2];					
										console.log("ElementID: "+element1ID);
										
										proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
										proposalPrio2listPoint = priority[2].list[element1ID];
										
										$( "li[class^='movie']" ).removeClass("selectedResult");
										$( "."+element1 ).addClass("selectedResult");
										
										proposal.filmID = proposalPrio1listPoint.filmID;
										proposal.spielplanID = proposalPrio2listPoint.spielplanID;
										
										$( "div.proposal1" ).remove();
										$( "div.proposal2" ).remove();
										$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																					'Film: '+proposalPrio1listPoint.deTitel+
																					'</br>Genre: '				+proposalPrio1listPoint.genre+
																					'</br>Regie: '				+proposalPrio1listPoint.regie+
																					'</br>Dauer: '				+proposalPrio1listPoint.dauer+
																					'</br>Erscheinungstermin: '	+proposalPrio1listPoint.erscheinungstermin+
																				'</div>');
										$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																					'SpielplanID: '+proposalPrio2listPoint.spielplanID+
																					'</br>Spielzeiten'+
																					'</br>Mo: '			+proposalPrio2listPoint.mo+
																					'</br>Di: '			+proposalPrio2listPoint.di+
																					'</br>Mi: '			+proposalPrio2listPoint.mi+
																					'</br>Do: '			+proposalPrio2listPoint.do+
																					'</br>Fr: '			+proposalPrio2listPoint.fr+
																					'</br>Sa: '			+proposalPrio2listPoint.sa+
																					'</br>So: '			+proposalPrio2listPoint.so+
																					'</br>Überlaenge: ' +(proposalPrio2listPoint.ueberlaenge == true ? 'Ja' : 'Nein')+
																					'</br>In 3D: '		+(proposalPrio2listPoint.in3D == true ? 'Ja' : 'Nein')+
																				'</div>');
																				
										$timeResults.empty();
										
										$.each(spielplanResponse, function(i, spielplan) {
											if(priority[1].list[element1ID].filmID == spielplan.filmID){
												$timeResults.append('<li class="timeResult time-resultID-'+ i +' selectedResult">SpielplanID: '+spielplan.spielplanID+
																		'</br>Spielzeiten'+
																		'</br>Mo: '			+spielplan.mo+
																		'</br>Di: '			+spielplan.di+
																		'</br>Mi: '			+spielplan.mi+
																		'</br>Do: '			+spielplan.do+
																		'</br>Fr: '			+spielplan.fr+
																		'</br>Sa: '			+spielplan.sa+
																		'</br>So: '			+spielplan.so+
																		'</br>Überlaenge: ' +(spielplan.ueberlaenge == true ? 'Ja' : 'Nein')+
																		'</br>In 3D: '		+(spielplan.in3D == true ? 'Ja' : 'Nein')+
																	'</li>');
											}
										});
										
										pointerView();
										defineProposal();
										
									});
								}
								if( !($( 'div' ).filter($( "[class$='prio1']" )).length) || ($( 'div' ).filter( ".category.timeBox.prio1" ).length) ){

									if( $( 'div' ).filter($( "[class$='prio2']" )).length ){
										$( "li[class^='movie']" ).removeClass( "selectResult" );
									}
								
									$( "li[class^='time']" ).click(function() {

										$( "li[class^='movie']" ).removeClass( "selectResult" );
									
										priority[1].searchPointer = 2;
										priority[1].classPointer = ".category.timeBox";
										priority[1].list = spielplanResponse;
										priority[2].searchPointer = 1;
										priority[2].classPointer = ".category.movieBox";
										priority[2].list = filmResponse;

										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
										$(priority[1].classPointer).addClass( "prio1" );
										$(priority[2].classPointer).addClass( "prio2" );										
										
										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$(priority[1].classPointer).addClass( "prio1" );
										
										console.log( $( this ).attr("class") );
					
										element1Array = $( this ).attr("class").split(" ");
										element1 = element1Array[1];
										element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
										
										element1ID = element1SplittedArray[2];					
										console.log("ElementID: "+element1ID);
										
										proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
										proposalPrio2listPoint = priority[2].list[element1ID];

										$( "li[class^='time']" ).removeClass("selectedResult");
										$( "."+element1 ).addClass("selectedResult");
										
										proposal.spielplanID = proposalPrio1listPoint.spielplanID;
										proposal.filmID = proposalPrio2listPoint.filmID;
										
										$( "div.proposal1" ).remove();
										$( "div.proposal2" ).remove();
										$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																					'SpielplanID: '+proposalPrio1listPoint.spielplanID+
																					'</br>Spielzeiten'+
																					'</br>Mo: '			+proposalPrio1listPoint.mo+
																					'</br>Di: '			+proposalPrio1listPoint.di+
																					'</br>Mi: '			+proposalPrio1listPoint.mi+
																					'</br>Do: '			+proposalPrio1listPoint.do+
																					'</br>Fr: '			+proposalPrio1listPoint.fr+
																					'</br>Sa: '			+proposalPrio1listPoint.sa+
																					'</br>So: '			+proposalPrio1listPoint.so+
																					'</br>Überlaenge: ' +(proposalPrio1listPoint.ueberlaenge == true ? 'Ja' : 'Nein')+
																					'</br>In 3D: '		+(proposalPrio1listPoint.in3D == true ? 'Ja' : 'Nein')+
																				'</div>');									
										$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																					'Film: '+proposalPrio2listPoint.deTitel+
																					'</br>Genre: '				+proposalPrio2listPoint.genre+
																					'</br>Regie: '				+proposalPrio2listPoint.regie+
																					'</br>Dauer: '				+proposalPrio2listPoint.dauer+
																					'</br>Erscheinungstermin: '	+proposalPrio2listPoint.erscheinungstermin+
																				'</div>');
																				
										$movieResults.empty();
										
										$.each(filmResponse, function(i, film) {
											if(priority[1].list[element1ID].filmID == film.filmID){
												$movieResults.append('<li class="movieResult movie-resultID-'+ i +' selectedResult">Film: '+film.deTitel+
																		'</br>Genre: '				+film.genre+
																		'</br>Regie: '				+film.regie+
																		'</br>Dauer: '				+film.dauer+
																		'</br>Erscheinungstermin: '	+film.erscheinungstermin+
																	'</li>');
											}
										});

										pointerView();										
										defineProposal();	
										
									});
								}									
																	
							});
												
						});
																						
					}
					if( stringComponent == "movie" ){						
										
						proposal.filmID = proposalPrio0listPoint.filmID;											
						$( "div.defineProposalContent" ).append('<div class="proposal0">'+
																	'Film: '+proposalPrio0listPoint.deTitel+
																	'</br>Genre: '				+proposalPrio0listPoint.genre+
																	'</br>Regie: '				+proposalPrio0listPoint.regie+
																	'</br>Dauer: '				+proposalPrio0listPoint.dauer+
																	'</br>Erscheinungstermin: '	+proposalPrio0listPoint.erscheinungstermin+
																'</div>');
																
						function getSpielplaeneFilmID(){
							return $.ajax({
										url: '/spielplaene',
										method: 'GET',
										async: false,
										data: 'filmID='+proposalPrio0listPoint.filmID,
										contentType: 'application/json',
									}).done(function (response) {
											console.log("spielplaene: "+response);
											spielplanResponse = response;
									}).fail(function () {
										console.log('Error!');
										alert('Error!');
									});
						};
						
						function getKinos(i) {
							return $.ajax({
										url: '/kinos',
										method: 'GET',
										async: false,
										data: 'kinoID='+spielplanResponse[i].kinoID,
										contentType: 'application/json',
									}).done(function (response) {
										kinoResponse.push(response[0]); // response ist ein array - wir wollen kein array in ein array übergeben, daher response[0]
										
										var index = kinoResponse.indexOf(response[0]);
										var foundID = false;
										
										console.log("Index: "+index);
										
										if(index > -1) {
											for( var kino in kinoResponse ){
												if(kinoResponse[kino].kinoID == response[0].kinoID){
													foundID = true;
													break;
												}									
											}
											if(foundID == false){
												kinoResponse.splice(index, 1);
											}
										}										
									
										console.log("kinos: "+kinoResponse);
										console.log("Response: "+response);
									}).fail(function () {
										console.log('Error!');
										alert('Error!');
									});
								};
				
						$.when( getSpielplaeneFilmID() ).done( function(){

							for(var spielplan in spielplanResponse){
													
								ajaxGetKino = getKinos(spielplan);
								
							}

							$.when( ajaxGetKino ).done( function(){
								$timeResults.empty();
								$cineResults.empty();
								
								$.each(spielplanResponse, function(i, spielplan) {
									$timeResults.append('<li class="timeResult time-resultID-'+ i +' selectResult">SpielplanID: '+spielplan.spielplanID+
															'</br>Spielzeiten'+
															'</br>Mo: '			+spielplan.mo+
															'</br>Di: '			+spielplan.di+
															'</br>Mi: '			+spielplan.mi+
															'</br>Do: '			+spielplan.do+
															'</br>Fr: '			+spielplan.fr+
															'</br>Sa: '			+spielplan.sa+
															'</br>So: '			+spielplan.so+
															'</br>Überlaenge: ' +(spielplan.ueberlaenge == true ? 'Ja' : 'Nein')+
															'</br>In 3D: '		+(spielplan.in3D == true ? 'Ja' : 'Nein')+
														'</li>');
								});	
								$.each(kinoResponse, function(i, kino) {
									$cineResults.append('<li class="cineResult cine-resultID-'+ i +' selectResult">'+
																'Kino: '				+kino.bezeichnung+
																'</br>Straße: '			+kino.straße+
																'</br>Ort: '			+kino.ort+
																'</br>PLZ: '			+kino.plz+
																'</br>Kinotag: '		+kino.kinotag+
																'</br>Reservierung: '	+kino.reservierungsHotline+
																'</br>Preise: '			+kino.preise+
																'</br>Bewertung: '		+kino.bewertung+
																'</br>Website: <a href="'+kino.website+'">'+kino.website+'</a>'+
														'</li>');
								});
								
								pointerView();

								if( !($( 'div' ).filter($( "[class$='prio1']" )).length) || ($( 'div' ).filter( ".category.cineBox.prio1" ).length) ){

									if( $( 'div' ).filter($( "[class$='prio2']" )).length ){
										$( "li[class^='time']" ).removeClass( "selectResult" );
									}
								
									$( "li[class^='cine']" ).click(function() {

										$( "li[class^='time']" ).removeClass( "selectResult" );
									
										priority[1].searchPointer = 0;
										priority[1].classPointer = ".category.cineBox";
										priority[1].list = kinoResponse;
										priority[2].searchPointer = 2;
										priority[2].classPointer = ".category.timeBox";
										priority[2].list = spielplanResponse;
										
										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
										$(priority[1].classPointer).addClass( "prio1" );
										$(priority[2].classPointer).addClass( "prio2" );
										
										console.log( $( this ).attr("class") );
					
										element1Array = $( this ).attr("class").split(" ");
										element1 = element1Array[1];
										element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
										
										element1ID = element1SplittedArray[2];					
										console.log("ElementID: "+element1ID);
										
										proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
										proposalPrio2listPoint = priority[2].list[element1ID];
										
										$( "li[class^='cine']" ).removeClass("selectedResult");
										$( "."+element1 ).addClass("selectedResult");
										
										proposal.kinoID = proposalPrio1listPoint.kinoID;
										proposal.spielplanID = proposalPrio2listPoint.spielplanID;
										
										$( "div.proposal1" ).remove();
										$( "div.proposal2" ).remove();
										$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																					'Kino: '+proposalPrio1listPoint.bezeichnung+
																					'</br>Straße: '			+proposalPrio1listPoint.straße+
																					'</br>Ort: '			+proposalPrio1listPoint.ort+
																					'</br>PLZ: '			+proposalPrio1listPoint.plz+
																					'</br>Kinotag: '		+proposalPrio1listPoint.kinotag+
																					'</br>Reservierung: '	+proposalPrio1listPoint.reservierungsHotline+
																					'</br>Preise: '			+proposalPrio1listPoint.preise+
																					'</br>Bewertung: '		+proposalPrio1listPoint.bewertung+
																					'</br>Website: <a href="'+proposalPrio1listPoint.website+'">'+proposalPrio1listPoint.website+'</a>'+
																				'</div>');
										$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																					'SpielplanID: '+proposalPrio2listPoint.spielplanID+
																					'</br>Mo: '			+proposalPrio2listPoint.mo+
																					'</br>Di: '			+proposalPrio2listPoint.di+
																					'</br>Mi: '			+proposalPrio2listPoint.mi+
																					'</br>Do: '			+proposalPrio2listPoint.do+
																					'</br>Fr: '			+proposalPrio2listPoint.fr+
																					'</br>Sa: '			+proposalPrio2listPoint.sa+
																					'</br>So: '			+proposalPrio2listPoint.so+
																					'</br>Überlaenge: ' +(proposalPrio2listPoint.ueberlaenge == true ? 'Ja' : 'Nein')+
																					'</br>In 3D: '		+(proposalPrio2listPoint.in3D == true ? 'Ja' : 'Nein')+
																				'</div>');
																				
										$timeResults.empty();
										
										$.each(spielplanResponse, function(i, spielplan) {
											if(priority[1].list[element1ID].kinoID == spielplan.kinoID){
												$timeResults.append('<li class="timeResult time-resultID-'+ i +' selectedResult">'+
																		'SpielplanID: '+spielplan.spielplanID+
																		'</br>Mo: '			+spielplan.mo+
																		'</br>Di: '			+spielplan.di+
																		'</br>Mi: '			+spielplan.mi+
																		'</br>Do: '			+spielplan.do+
																		'</br>Fr: '			+spielplan.fr+
																		'</br>Sa: '			+spielplan.sa+
																		'</br>So: '			+spielplan.so+
																		'</br>Überlaenge: ' +(spielplan.ueberlaenge == true ? 'Ja' : 'Nein')+
																		'</br>In 3D: '		+(spielplan.in3D == true ? 'Ja' : 'Nein')+
																	'</li>');
											}
										});
										
										pointerView();
										defineProposal();
										
									});
								}
								if( !($( 'div' ).filter($( "[class$='prio1']" )).length) || ($( 'div' ).filter( ".category.timeBox.prio1" ).length) ){

									if( $( 'div' ).filter($( "[class$='prio2']" )).length ){
										$( "li[class^='cine']" ).removeClass( "selectResult" );
									}
								
									$( "li[class^='time']" ).click(function() {
									
										$( "li[class^='cine']" ).removeClass( "selectResult" );
									
										priority[1].searchPointer = 2;
										priority[1].classPointer = ".category.timeBox";
										priority[1].list = spielplanResponse;
										priority[2].searchPointer = 0;
										priority[2].classPointer = ".category.cineBox";
										priority[2].list = kinoResponse;

										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
										$(priority[1].classPointer).addClass( "prio1" );
										$(priority[2].classPointer).addClass( "prio2" );										
										
										console.log( $( this ).attr("class") );
					
										element1Array = $( this ).attr("class").split(" ");
										element1 = element1Array[1];
										element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
										
										element1ID = element1SplittedArray[2];					
										console.log("ElementID: "+element1ID);
										
										proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
										proposalPrio2listPoint = priority[2].list[element1ID];

										$( "li[class^='time']" ).removeClass("selectedResult");
										$( "."+element1 ).addClass("selectedResult");
										
										proposal.spielplanID = proposalPrio1listPoint.spielplanID;
										proposal.kinoID = proposalPrio2listPoint.kinoID;
										
										$( "div.proposal1" ).remove();
										$( "div.proposal2" ).remove();
										$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																					'SpielplanID: '+proposalPrio1listPoint.spielplanID+
																					'</br>Spielzeiten'+
																					'</br>Mo: '			+proposalPrio1listPoint.mo+
																					'</br>Di: '			+proposalPrio1listPoint.di+
																					'</br>Mi: '			+proposalPrio1listPoint.mi+
																					'</br>Do: '			+proposalPrio1listPoint.do+
																					'</br>Fr: '			+proposalPrio1listPoint.fr+
																					'</br>Sa: '			+proposalPrio1listPoint.sa+
																					'</br>So: '			+proposalPrio1listPoint.so+
																					'</br>Überlaenge: ' +(proposalPrio1listPoint.ueberlaenge == true ? 'Ja' : 'Nein')+
																					'</br>In 3D: '		+(proposalPrio1listPoint.in3D == true ? 'Ja' : 'Nein')+
																				'</div>');									
										$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																					'Kino: '+proposalPrio2listPoint.bezeichnung+
																				'</div>');
																				
										$cineResults.empty();
										
										$.each(kinoResponse, function(i, kino) {
											if(priority[1].list[element1ID].kinoID == kino.kinoID){
												$cineResults.append('<li class="cineResult cine-resultID-'+ i +' selectedResult">'+kino.bezeichnung+
																		'Kino: '+kino.bezeichnung+
																		'</br>Straße: '			+kino.straße+
																		'</br>Ort: '			+kino.ort+
																		'</br>PLZ: '			+kino.plz+
																		'</br>Kinotag: '		+kino.kinotag+
																		'</br>Reservierung: '	+kino.reservierungsHotline+
																		'</br>Preise: '			+kino.preise+
																		'</br>Bewertung: '		+kino.bewertung+
																		'</br>Website: <a href="'+kino.website+'">'+kino.website+'</a>'+
																	'</li>');
											}
										});

										pointerView();
										defineProposal();
																				
									});
								}									
																	
							});
												
						});																
					}
					if( stringComponent == "time" ){
									
						proposal.spielplanID = proposalPrio0listPoint.spielplanID;										
						$( "div.defineProposalContent" ).append('<div class="proposal0">'+
																	'SpielplanID: '+proposalPrio0listPoint.spielplanID+
																	'Spielzeiten'+
																	'Mo: '				+proposalPrio0listPoint.mo+
																	'</br>Di: '			+proposalPrio0listPoint.di+
																	'</br>Mi: '			+proposalPrio0listPoint.mi+
																	'</br>Do: '			+proposalPrio0listPoint.do+
																	'</br>Fr: '			+proposalPrio0listPoint.fr+
																	'</br>Sa: '			+proposalPrio0listPoint.sa+
																	'</br>So: '			+proposalPrio0listPoint.so+
																	'</br>Überlaenge: ' +(proposalPrio0listPoint.ueberlaenge == true ? 'Ja' : 'Nein')+
																	'</br>In 3D: '		+(proposalPrio0listPoint.in3D == true ? 'Ja' : 'Nein')+
																'</div>');

						function getFilmeSpielplanID(){
							return $.ajax({
										url: '/filme',
										method: 'GET',
										async: false,
										data: 'filmID='+proposalPrio0listPoint.filmID,
										contentType: 'application/json',
									}).done(function (response) {
											console.log("spielplaene: "+response);
											filmResponse = response;
									}).fail(function () {
										console.log('Error!');
										alert('Error!');
									});
						};
						
						function getKinosSpielplanID() {
							return $.ajax({
										url: '/kinos',
										method: 'GET',
										async: false,
										data: 'kinoID='+proposalPrio0listPoint.kinoID,
										contentType: 'application/json',
									}).done(function (response) {
										kinoResponse.push(response[0]); // response ist ein array - wir wollen kein array in ein array übergeben, daher response[0]
										
										var index = kinoResponse.indexOf(response[0]);
										var foundID = false;
										
										console.log("Index: "+index);
										
										if(index > -1) {
											for( var kino in kinoResponse ){
												if(kinoResponse[kino].kinoID == response[0].kinoID){
													foundID = true;
													break;
												}									
											}
											if(foundID == false){
												kinoResponse.splice(index, 1);
											}
										}										
									
										console.log("kinos: "+kinoResponse);
										console.log("Response: "+response);
									}).fail(function () {
										console.log('Error!');
										alert('Error!');
									});
								};
				
						$.when( getFilmeSpielplanID() ).done( function(){

							// for(var spielplan in spielplanResponse){
							
								// ajaxGetKino = getKinosSpielplanID(spielplan);
							// }

							$.when( getKinosSpielplanID() ).done( function(){
								$movieResults.empty();
								$cineResults.empty();
								
								$.each(filmResponse, function(i, film) {
									$movieResults.append('<li class="movieResult movie-resultID-'+ i +' selectResult">'+
															'Film: '					+film.deTitel+
															'</br>Genre: '				+film.genre+
															'</br>Regie: '				+film.regie+
															'</br>Dauer: '				+film.dauer+
															'</br>Erscheinungstermin: '	+film.erscheinungstermin+
														'</li>');
								});	
								$.each(kinoResponse, function(i, kino) {
									$cineResults.append('<li class="cineResult cine-resultID-'+ i +' selectResult">Kino: '+kino.bezeichnung+
															'</br>Straße: '			+kino.straße+
															'</br>Ort: '			+kino.ort+
															'</br>PLZ: '			+kino.plz+
															'</br>Kinotag: '		+kino.kinotag+
															'</br>Reservierung: '	+kino.reservierungsHotline+
															'</br>Preise: '			+kino.preise+
															'</br>Bewertung: '		+kino.bewertung+
															'</br>Website: <a href="'+kino.website+'">'+kino.website+'</a>'+
														'</li>');
								});

								if( !($( 'div' ).filter($( "[class$='prio1']" )).length) || ($( 'div' ).filter( ".category.cineBox.prio1" ).length) ){

									if( $( 'div' ).filter($( "[class$='prio2']" )).length ){
										$( "li[class^='movie']" ).removeClass( "selectResult" );
									}
								
									$( "li[class^='cine']" ).click(function() {
									
										$( "li[class^='movie']" ).removeClass( "selectResult" );
									
										priority[1].searchPointer = 0;
										priority[1].classPointer = ".category.cineBox";
										priority[1].list = kinoResponse;
										priority[2].searchPointer = 1;
										priority[2].classPointer = ".category.movieBox";
										priority[2].list = filmResponse;
										
										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
										$(priority[1].classPointer).addClass( "prio1" );
										$(priority[2].classPointer).addClass( "prio2" );
										
										console.log( $( this ).attr("class") );
					
										element1Array = $( this ).attr("class").split(" ");
										element1 = element1Array[1];
										element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
										
										element1ID = element1SplittedArray[2];					
										console.log("ElementID: "+element1ID);
										
										proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
										proposalPrio2listPoint = priority[2].list[element1ID];
										
										$( "li[class^='cine']" ).removeClass("selectedResult");
										$( "."+element1 ).addClass("selectedResult");
										
										proposal.kinoID = proposalPrio1listPoint.kinoID;
										proposal.filmID = proposalPrio2listPoint.filmID;
										
										$( "div.proposal1" ).remove();
										$( "div.proposal2" ).remove();
										
										$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																					'Kino: '				+proposalPrio1listPoint.bezeichnung+
																					'</br>Straße: '			+proposalPrio1listPoint.straße+
																					'</br>Ort: '			+proposalPrio1listPoint.ort+
																					'</br>PLZ: '			+proposalPrio1listPoint.plz+
																					'</br>Kinotag: '		+proposalPrio1listPoint.kinotag+
																					'</br>Reservierung: '	+proposalPrio1listPoint.reservierungsHotline+
																					'</br>Preise: '			+proposalPrio1listPoint.preise+
																					'</br>Bewertung: '		+proposalPrio1listPoint.bewertung+
																					'</br>Website: <a href="'+proposalPrio1listPoint.website+'">'+proposalPrio1listPoint.website+'</a>'+
																				'</div>');
										$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																					'Film: '					+proposalPrio2listPoint.deTitel+
																					'</br>Genre: '				+proposalPrio2listPoint.genre+
																					'</br>Regie: '				+proposalPrio2listPoint.regie+
																					'</br>Dauer: '				+proposalPrio2listPoint.dauer+
																					'</br>Erscheinungstermin: '	+proposalPrio2listPoint.erscheinungstermin+
																				'</div>');
																				
										$movieResults.empty();
										
										$.each(filmResponse, function(i, film) {
											if(priority[0].list[element0ID].filmID == film.filmID){
												$movieResults.append('<li class="movieResult movie-resultID-'+ i +' selectedResult">'+
																		'Film: '					+film.deTitel+
																		'</br>Genre: '				+film.genre+
																		'</br>Regie: '				+film.regie+
																		'</br>Dauer: '				+film.dauer+
																		'</br>Erscheinungstermin: '	+film.erscheinungstermin+
																	+'</li>');
											}
										});
										
										pointerView();
										defineProposal();
										
									});
								}
								if( !($( 'div' ).filter($( "[class$='prio1']" )).length) || ($( 'div' ).filter( ".category.movieBox.prio1" ).length) ){

									if( $( 'div' ).filter($( "[class$='prio2']" )).length ){
										$( "li[class^='cine']" ).removeClass( "selectResult" );
									}
								
									$( "li[class^='movie']" ).click(function() {
									
										$( "li[class^='cine']" ).removeClass( "selectResult" );
									
										priority[1].searchPointer = 1;
										priority[1].classPointer = ".category.movieBox";
										priority[1].list = filmResponse;
										priority[2].searchPointer = 0;
										priority[2].classPointer = ".category.cineBox";
										priority[2].list = kinoResponse;

										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
										$(priority[1].classPointer).addClass( "prio1" );
										$(priority[2].classPointer).addClass( "prio2" );										
										
										$( 'div' ).filter($( "[class$='prio1']" )).removeClass( "prio1" );
										$(priority[1].classPointer).addClass( "prio1" );
										
										console.log( $( this ).attr("class") );
					
										element1Array = $( this ).attr("class").split(" ");
										element1 = element1Array[1];
										element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
										
										element1ID = element1SplittedArray[2];					
										console.log("ElementID: "+element1ID);
										
										proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
										proposalPrio2listPoint = priority[2].list[element1ID];

										$( "li[class^='movie']" ).removeClass("selectedResult");
										$( "."+element1 ).addClass("selectedResult");
										
										proposal.filmID = proposalPrio1listPoint.filmID;
										proposal.kinoID = proposalPrio2listPoint.kinoID;
										
										$( "div.proposal1" ).remove();
										$( "div.proposal2" ).remove();
										$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																					'Film: '+proposalPrio1listPoint.deTitel+
																					'</br>Genre: '				+proposalPrio1listPoint.genre+
																					'</br>Regie: '				+proposalPrio1listPoint.regie+
																					'</br>Dauer: '				+proposalPrio1listPoint.dauer+
																					'</br>Erscheinungstermin: '	+proposalPrio1listPoint.erscheinungstermin+
																				'</div>');									
										$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																					'Kino: '+proposalPrio2listPoint.bezeichnung+
																					'</br>Straße: '			+proposalPrio2listPoint.straße+
																					'</br>Ort: '			+proposalPrio2listPoint.ort+
																					'</br>PLZ: '			+proposalPrio2listPoint.plz+
																					'</br>Kinotag: '		+proposalPrio2listPoint.kinotag+
																					'</br>Reservierung: '	+proposalPrio2listPoint.reservierungsHotline+
																					'</br>Preise: '			+proposalPrio2listPoint.preise+
																					'</br>Bewertung: '		+proposalPrio2listPoint.bewertung+
																					'</br>Website: <a href="'+proposalPrio2listPoint.website+'">'+proposalPrio2listPoint.website+'</a>'+
																				'</div>');

										$cineResults.empty();
										
										$.each(kinoResponse, function(i, kino) {
											if(priority[0].list[element0ID].kinoID == kino.kinoID){
												$cineResults.append('<li class="cineResult cine-resultID-'+ i +' selectedResult">'+
																		'Kino: '+kino.bezeichnung+
																		'</br>Straße: '			+kino.straße+
																		'</br>Ort: '			+kino.ort+
																		'</br>PLZ: '			+kino.plz+
																		'</br>Kinotag: '		+kino.kinotag+
																		'</br>Reservierung: '	+kino.reservierungsHotline+
																		'</br>Preise: '			+kino.preise+
																		'</br>Bewertung: '		+kino.bewertung+
																		'</br>Website: <a href="'+kino.website+'">'+kino.website+'</a>'+
																	'</li>');
											}
										});

										pointerView();
										defineProposal();
																				
									});
								}									
																	
							});
												
						});																
																
					}
					
					console.log(proposal);																				
					
					$( "div.locked" ).remove();

					defineProposal();					
					
				});
				
				if( !($( 'div' ).filter($( ".locked" )).length) ){	// Wenn keine Suche bereits gelocked ist, darf gelocked werden
				
					if( stringComponent == "cine" && counter == 1 && priority[1].searchPointer == "" && priority[2].searchPointer == "" ){						
						$( "div.category.movieBox" ).append('<div class="locked"></div>');
						$( "div.category.timeBox" ).append('<div class="locked"></div>');					
					}
					if( priority[1].searchPointer === 0 && counter == 2 && priority[0].searchPointer === 1 && priority[2].searchPointer == "" ){						
						$( "div.category.timeBox" ).append('<div class="locked"></div>');					
					}
					if( priority[1].searchPointer === 0 && counter == 2 && priority[0].searchPointer === 2 && priority[2].searchPointer == "" ){						
						$( "div.category.movieBox" ).append('<div class="locked"></div>');					
					}
					
					if( stringComponent == "movie" && counter == 1 && priority[1].searchPointer == "" && priority[2].searchPointer == "" ){				
						$( "div.category.cineBox" ).append('<div class="locked"></div>');
						$( "div.category.timeBox" ).append('<div class="locked"></div>');					
					}
					if( priority[1].searchPointer === 1 && counter == 2 && priority[0].searchPointer === 0 && priority[2].searchPointer == "" ){						
						$( "div.category.timeBox" ).append('<div class="locked"></div>');					
					}
					if( priority[1].searchPointer === 1 && counter == 2 && priority[0].searchPointer === 2 && priority[2].searchPointer == "" ){						
						$( "div.category.cineBox" ).append('<div class="locked"></div>');					
					}
					
					if( stringComponent == "time" && counter == 1 && priority[1].searchPointer == "" && priority[2].searchPointer == "" ){				
						$( "div.category.cineBox" ).append('<div class="locked"></div>');
						$( "div.category.movieBox" ).append('<div class="locked"></div>');					
					}
					if( priority[1].searchPointer === 2 && counter == 2 && priority[0].searchPointer === 1 && priority[2].searchPointer === "" ){						
						$( "div.category.cineBox" ).append('<div class="locked"></div>');					
					}
					if( priority[1].searchPointer === 2 && counter == 2 && priority[0].searchPointer === 0 && priority[2].searchPointer == "" ){						
						$( "div.category.movieBox" ).append('<div class="locked"></div>');					
					}
				}			

				// Falls cineSearch priority[1] und ein Filter per Submit angewendet wird
				if( priority[1].searchPointer === 0 ){

					$( "li[class^='cine']" ).addClass("selectResult");
				
					$( "li[class^='cine']" ).click(function() {
								
						console.log( $( this ).attr("class") );
	
						element1Array = $( this ).attr("class").split(" ");
						element1 = element1Array[1];
						element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
						
						element1ID = element1SplittedArray[2];					
						console.log("ElementID: "+element1ID);
						
						
						
						proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
						
						$( "li[class^='cine']" ).removeClass("selectedResult");
						$( "."+element1 ).addClass("selectedResult");
						
						proposal.kinoID = proposalPrio1listPoint.kinoID;
						
						
						$( "div.proposal1" ).remove();
						$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																	'Kino: '				+proposalPrio1listPoint.bezeichnung+
																	'</br>Straße: '			+proposalPrio1listPoint.straße+
																	'</br>Ort: '			+proposalPrio1listPoint.ort+
																	'</br>PLZ: '			+proposalPrio1listPoint.plz+
																	'</br>Kinotag: '		+proposalPrio1listPoint.kinotag+
																	'</br>Reservierung: '	+proposalPrio1listPoint.reservierungsHotline+
																	'</br>Preise: '			+proposalPrio1listPoint.preise+
																	'</br>Bewertung: '		+proposalPrio1listPoint.bewertung+
																	'</br>Website: <a href="'+proposalPrio1listPoint.website+'">'+proposalPrio1listPoint.website+'</a>'+
																'</div>');
						
						$( "div.locked" ).remove();

						// Falls priority[0] bei der movieSearch liegt -> priority[2] liegt bei timeSearch
						if(priority[0].searchPointer === 1){
						
							priority[2].searchPointer = 2;
							priority[2].classPointer = ".category.timeBox";
						
							$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
							$(priority[2].classPointer).addClass( "prio2" );
						
							$.ajax({
								url: '/spielplaene',
								method: 'GET',
								async: false,
								data: 'kinoID='+proposalPrio1listPoint.kinoID,
								contentType: 'application/json',
							}).done(function (response) {
								console.log("spielplaene: "+response);
								spielplanResponse = response;
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});

							priority[2].list = spielplanResponse;
																
							$timeResults.empty();
							
							$.each(spielplanResponse, function(i, spielplan) {
								if(proposalPrio0listPoint.filmID == spielplan.filmID){
									proposalPrio2listPoint = spielplanResponse[i];
									$timeResults.append('<li class="timeResult time-resultID-'+ i +' selectedResult">'+
															'SpielplanID: '		+spielplan.spielplanID+
															'</br>Mo: '			+spielplan.mo+
															'</br>Di: '			+spielplan.di+
															'</br>Mi: '			+spielplan.mi+
															'</br>Do: '			+spielplan.do+
															'</br>Fr: '			+spielplan.fr+
															'</br>Sa: '			+spielplan.sa+
															'</br>So: '			+spielplan.so+
															'</br>Überlaenge: ' +(spielplan.ueberlaenge == true ? 'Ja' : 'Nein')+
															'</br>In 3D: '		+(spielplan.in3D == true ? 'Ja' : 'Nein')+
														'</li>');
									
								}
							});
							
							proposal.spielplanID = proposalPrio2listPoint.spielplanID;
							
							$( "div.proposal2" ).remove();							
							$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																		'SpielplanID: '		+proposalPrio2listPoint.spielplanID+
																		'</br>Mo: '			+proposalPrio2listPoint.mo+
																		'</br>Di: '			+proposalPrio2listPoint.di+
																		'</br>Mi: '			+proposalPrio2listPoint.mi+
																		'</br>Do: '			+proposalPrio2listPoint.do+
																		'</br>Fr: '			+proposalPrio2listPoint.fr+
																		'</br>Sa: '			+proposalPrio2listPoint.sa+
																		'</br>So: '			+proposalPrio2listPoint.so+
																		'</br>Überlaenge: ' +(proposalPrio2listPoint.ueberlaenge == true ? 'Ja' : 'Nein')+
																		'</br>In 3D: '		+(proposalPrio2listPoint.in3D == true ? 'Ja' : 'Nein')+
																	'</div>');
																	
							defineProposal();
							
						}
						// Falls priority[0] bei der timeSearch liegt -> priority[2] liegt bei movieSearch
						if(priority[0].searchPointer === 2){
						
							priority[2].searchPointer = 1;
							priority[2].classPointer = ".category.movieBox";
						
							$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
							$(priority[2].classPointer).addClass( "prio2" );
						
							$.ajax({
								url: '/filme',
								method: 'GET',
								async: false,
								data: 'filmID='+proposalPrio0listPoint.filmID,
								contentType: 'application/json',
							}).done(function (response) {
								console.log("spielplaene: "+response);
								filmResponse = response;
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});

							priority[2].list = filmResponse;
																
							$movieResults.empty();
							
							// $.each(spielplanResponse, function(i, spielplan) {
								// if(proposalPrio0listPoint.filmID == spielplan.filmID){
									proposalPrio2listPoint = filmResponse[0];
									$movieResults.append('<li class="movieResult movie-resultID-'+ i +' selectedResult">'+
															'Film: '					+filmResponse[0].deTitel+
															'</br>Genre: '				+filmResponse[0].genre+
															'</br>Regie: '				+filmResponse[0].regie+
															'</br>Dauer: '				+filmResponse[0].dauer+
															'</br>Erscheinungstermin: '	+filmResponse[0].erscheinungstermin+
															
														'</li>');
									
								// }
							// });
							
							proposal.filmID = proposalPrio2listPoint.filmID;
							
							$( "div.proposal2" ).remove();							
							$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																		'Film: '+proposalPrio2listPoint.deTitel+
																		'</br>Genre: '				+proposalPrio2listPoint.genre+
																		'</br>Regie: '				+proposalPrio2listPoint.regie+
																		'</br>Dauer: '				+proposalPrio2listPoint.dauer+
																		'</br>Erscheinungstermin: '	+proposalPrio2listPoint.erscheinungstermin+
																	'</div>');	

							defineProposal();
							
						}						

					});					
				}
				// Falls movieSearch priority[1] und ein Filter per Submit angewendet wird
				if( priority[1].searchPointer === 1 ){
				
					$( "li[class^='movie']" ).addClass("selectResult");
				
					$( "li[class^='movie']" ).click(function() {									
						
						console.log( $( this ).attr("class") );
	
						element1Array = $( this ).attr("class").split(" ");
						element1 = element1Array[1];
						element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
						
						element1ID = element1SplittedArray[2];					
						console.log("ElementID: "+element1ID);
						
						proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
						
						$( "li[class^='movie']" ).removeClass("selectedResult");
						$( "."+element1 ).addClass("selectedResult");
						
						proposal.filmID = proposalPrio1listPoint.filmID;
						
						$( "div.proposal1" ).remove();
						$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																	'Film: '+proposalPrio1listPoint.deTitel+
																	'</br>Genre: '				+proposalPrio1listPoint.genre+
																	'</br>Regie: '				+proposalPrio1listPoint.regie+
																	'</br>Dauer: '				+proposalPrio1listPoint.dauer+
																	'</br>Erscheinungstermin: '	+proposalPrio1listPoint.erscheinungstermin+
																'</div>');
																
						$( "div.locked" ).remove();
						
						// Falls priority[0] bei der cineSearch liegt -> priority[2] liegt bei timeSearch
						if(priority[0].searchPointer === 0){
						
							priority[2].searchPointer = 2;
							priority[2].classPointer = ".category.timeBox";
						
							$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
							$(priority[2].classPointer).addClass( "prio2" );
						
							$.ajax({
								url: '/spielplaene',
								method: 'GET',
								async: false,
								data: 'filmID='+proposalPrio1listPoint.filmID,
								contentType: 'application/json',
							}).done(function (response) {
								console.log("spielplaene: "+response);
								spielplanResponse = response;
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});

							priority[2].list = spielplanResponse;
																
							$timeResults.empty();

							$.each(spielplanResponse, function(i, spielplan) {
								if(proposalPrio1listPoint.filmID == spielplan.filmID){
									proposalPrio2listPoint = spielplanResponse[i];
									$timeResults.append('<li class="timeResult time-resultID-'+ i +' selectedResult">SpielplanID: '+spielplan.spielplanID+
															'Mo: '				+spielplan.mo+
															'</br>Di: '			+spielplan.di+
															'</br>Mi: '			+spielplan.mi+
															'</br>Do: '			+spielplan.do+
															'</br>Fr: '			+spielplan.fr+
															'</br>Sa: '			+spielplan.sa+
															'</br>So: '			+spielplan.so+
															'</br>Überlaenge: ' +(spielplan.ueberlaenge == true ? 'Ja' : 'Nein')+
															'</br>In 3D: '		+(spielplan.in3D == true ? 'Ja' : 'Nein')+
														'</li>');
									
								}
							});
							
							proposal.spielplanID = proposalPrio2listPoint.spielplanID;
							
							$( "div.proposal2" ).remove();							
							$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																		'Spielplan: '+proposalPrio2listPoint.spielplanID+
																	'</div>');

							defineProposal();
																	
						}
						// Falls priority[0] bei der timeSearch liegt -> priority[2] liegt bei cineSearch
						if(priority[0].searchPointer === 2){
						
							priority[2].searchPointer = 0;
							priority[2].classPointer = ".category.cineBox";
						
							$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
							$(priority[2].classPointer).addClass( "prio2" );
						
							$.ajax({
								url: '/kinos',
								method: 'GET',
								async: false,
								data: 'kinoID='+proposalPrio0listPoint.kinoID,
								contentType: 'application/json',
							}).done(function (response) {
								console.log("kinos: "+response);
								kinoResponse = response;
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});

							priority[2].list = kinoResponse;
																
							$cineResults.empty();
							
							proposalPrio2listPoint = kinoResponse[0];
							$cineResults.append('<li class="cineResult cine-resultID-'+ i +' selectedResult">'+kinoResponse[0].bezeichnung+'</li>');
									
							
							proposal.kinoID = proposalPrio2listPoint.kinoID;
							
							$( "div.proposal2" ).remove();							
							$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																		'Kino: '+proposalPrio2listPoint.bezeichnung+
																	'</div>');							
						}								
																
					});					
				}
				// Falls timeSearch priority[1] und ein Filter per Submit angewendet wird
				if( priority[1].searchPointer === 2 ){
					$( "li[class^='time']" ).addClass("selectResult");
				
					$( "li[class^='time']" ).click(function() {									
						
						console.log( $( this ).attr("class") );
	
						element1Array = $( this ).attr("class").split(" ");
						element1 = element1Array[1];
						element1SplittedArray = element1.split("-"); // split() statt slice() nutzen, da eine ID nicht immer einstellig ist
						
						element1ID = element1SplittedArray[2];					
						console.log("ElementID: "+element1ID);
						
						proposalPrio1listPoint = priority[1].list[element1ID];	// Speichern des Listen-Inhalts
						
						$( "li[class^='time']" ).removeClass("selectedResult");
						$( "."+element1 ).addClass("selectedResult");
						
						proposal.spielplanID = proposalPrio1listPoint.spielplanID;
						
						$( "div.proposal1" ).remove();
						$( "div.defineProposalContent" ).append('<div class="proposal1">'+
																	'Spielplan: '+proposalPrio1listPoint.spielplanID+
																'</div>');
						
						$( "div.locked" ).remove();						
																
						// Falls priority[0] bei der cineSearch liegt -> priority[2] liegt bei movieSearch
						if(priority[0].searchPointer === 0){
						
							priority[2].searchPointer = 1;
							priority[2].classPointer = ".category.movieBox";
						
							$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
							$(priority[2].classPointer).addClass( "prio2" );
						
							$.ajax({
								url: '/filme',
								method: 'GET',
								async: false,
								data: 'filmID='+proposalPrio1listPoint.filmID,
								contentType: 'application/json',
							}).done(function (response) {
								console.log("filme: "+response);
								filmResponse = response;
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});

							priority[2].list = filmResponse;
																
							$movieResults.empty();

							proposalPrio2listPoint = filmResponse[0];
							$movieResults.append('<li class="movieResult movie-resultID-'+ i +' selectedResult">'+filmResponse[0].deTitel+'</li>');
							
							proposal.filmID = proposalPrio2listPoint.filmID;
							
							$( "div.proposal2" ).remove();							
							$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																		'Film: '+proposalPrio2listPoint.deTitel+
																	'</div>');	

							defineProposal();
																	
						}
						// Falls priority[0] bei der movieSearch liegt -> priority[2] liegt bei cineSearch
						if(priority[0].searchPointer === 1){
						
							priority[2].searchPointer = 0;
							priority[2].classPointer = ".category.cineBox";
						
							$( 'div' ).filter($( "[class$='prio2']" )).removeClass( "prio2" );
							$(priority[2].classPointer).addClass( "prio2" );
						
							$.ajax({
								url: '/kinos',
								method: 'GET',
								async: false,
								data: 'kinoID='+proposalPrio1listPoint.kinoID,
								contentType: 'application/json',
							}).done(function (response) {
								console.log("kinos: "+response);
								kinoResponse = response;
							}).fail(function () {
								console.log('Error!');
								alert('Error!');
							});

							priority[2].list = kinoResponse;
																
							$cineResults.empty();

							proposalPrio2listPoint = kinoResponse[0];
							$cineResults.append('<li class="cineResult cine-resultID-'+ i +' selectedResult">'+kinoResponse[0].bezeichnung+'</li>');
									
							
							proposal.kinoID = proposalPrio2listPoint.kinoID;
							
							$( "div.proposal2" ).remove();							
							$( "div.defineProposalContent" ).append('<div class="proposal2">'+
																		'Kino: '+proposalPrio2listPoint.bezeichnung+
																	'</div>');	

							defineProposal();
																	
						}								
																
					});					
				}
						
			}
			
			
			if(pickedResult == true){ // Bisher nicht gebraucht
				$( "div.locked" ).remove();
				pickedResult == false;
			}
		
		}
		
		
        $( '.cineSearch' ).on( 'submit', function( event ) {
			event.preventDefault();		
			$('.cineResults').empty();

			$.ajax({
				url: '/kinos',
				method: 'GET',
				data: $('.cineSearch').serialize(),
				contentType: 'application/json',
				success: function(cineResults) {
					
					cineResults = refreshPage(0, cineResults, ".category.cineBox");
					priorityVisualise();
					
					$.each(cineResults, function(i, cineResult) {
						$cineResults.append('<li class="cineResult cine-resultID-'+ i +'">'+
												'Kino: '				+cineResult.bezeichnung+
												'</br>Straße: '			+cineResult.straße+
												'</br>Ort: '			+cineResult.ort+
												'</br>PLZ: '			+cineResult.plz+
												'</br>Kinotag: '		+cineResult.kinotag+
												'</br>Reservierung: '	+cineResult.reservierungsHotline+
												'</br>Preise: '			+cineResult.preise+
												'</br>Bewertung: '		+cineResult.bewertung+
												'</br>Website: <a href="'+cineResult.website+'">'+cineResult.website+'</a>'+
											'</li>');
					});
					
					pickResult();
					pointerView();

				}
			}).fail(function () {
				console.log('Error!');
				alert('Error!');
			});

        });
      
	  
	  
        $( '.movieSearch' ).on( 'submit', function( event ) {
			event.preventDefault();
			$('.movieResults').empty();			
			
			$.ajax({
				url: '/filme',
				method: 'GET',
				data: $('.movieSearch').serialize(),
				contentType: 'application/json',
				success: function(movieResults) {
					
					movieResults = refreshPage(1, movieResults, ".category.movieBox");
					priorityVisualise();					
					
					$.each(movieResults, function(i, movieResult) {
						$movieResults.append('<li class="movieResult movie-resultID-'+ i +'">'+
												'<strong>Film</strong>'+
												'Film: '					+movieResult.deTitel+
												'</br>Genre: '				+movieResult.genre+
												'</br>Regie: '				+movieResult.regie+
												'</br>Dauer: '				+movieResult.dauer+
												'</br>Erscheinungstermin: '	+movieResult.erscheinungstermin+
											 '</li>');
					});
					
					pickResult();
					pointerView();
					
				}
			}).fail(function () {
				console.log('Error!');
				alert('Error!');
          });


        });
    


        $( '.timeSearch' ).on( 'submit', function( event ) {
			event.preventDefault();
			$('.timeResults').empty();

			$.ajax({
				url: '/spielplaene',
				method: 'GET',
				data: $('.timeSearch').serialize(),
				contentType: 'application/json',
				success: function(timeResults) {
					
					timeResults = refreshPage(2, timeResults, ".category.timeBox");
					priorityVisualise();					

					$.each(timeResults, function(i, timeResult) {
						$timeResults.append('<li class="timeResult time-resultID-'+ i +'">SpielplanID: '+timeResult.spielplanID+
												'<strong>Spielzeiten</strong>'+
												'Mo: '				+timeResult.mo+
												'</br>Di: '			+timeResult.di+
												'</br>Mi: '			+timeResult.mi+
												'</br>Do: '			+timeResult.do+
												'</br>Fr: '			+timeResult.fr+
												'</br>Sa: '			+timeResult.sa+
												'</br>So: '			+timeResult.so+
												'</br>Überlaenge: ' +(timeResult.ueberlaenge == true ? 'Ja' : 'Nein')+
												'</br>In 3D: '		+(timeResult.in3D == true ? 'Ja' : 'Nein')+
											'</li>');
					});
					
					pickResult();
					pointerView();
									
				}
			}).fail(function () {
				console.log('Error!');
				alert('Error!');
          });


        });
		
		
		$( "input[class=showday]" ).on( "click", function() {
			var buttonMsg = $( "input[class=showday]:checked" ).val() + " is checked!";
			var newKey = "";
			var newValue = "";
			var valueMatch = false;
			var button = this;
			
			proposal.day = [];
			timeSet = false;
			defineProposal();
			
			$( '.showTime' ).empty();
			$( '.showTime' ).append('<label class="noBreak" for="zeit">Zeit (hh-mm):</label></br>'+
									'<input type="text" id="zeit"/></br>');
		
			console.log( buttonMsg );
			console.log( this );
			
			console.log(button.name);
			
			$('#zeit').keyup(function () {
				
				console.log($(this).val());
				newValue = $(this).val();
				
				valueMatch = ( newValue ).match(/(^|\s)(2[0-3]|1[0-9]|0[0-9])-([0-5][0-9])(\s|$)/); // match == true, sonst null

				if(valueMatch){
					console.log("BESTANDEN");
					$('span.glyphicon').remove();
					$('.timeInfo').remove();

					$( '.showTime' ).append(' <span class="glyphicon glyphicon-ok" aria-hidden="true"></span><span class="timeInfo"> Format OK</span>');
					
					$( "input[class=showday]:checked" ).each( function(i, checkedInput){
						this.value = newValue;
						proposal.day.push(this.name);
					});
					// proposal.time = newValue;
					console.log(proposal);
					if( proposalPrio0listPoint.hasOwnProperty("spielplanID") ){
						checkTime(proposalPrio0listPoint, newValue);
					}
					else if( proposalPrio1listPoint.hasOwnProperty("spielplanID") ){
						checkTime(proposalPrio1listPoint, newValue);
					}
					else if( proposalPrio2listPoint.hasOwnProperty("spielplanID") ){
						checkTime(proposalPrio2listPoint, newValue);
					}
					// timeSet = true;
					defineProposal();
					
				}	
				console.log("valueMatch: "+valueMatch);
				if(valueMatch == null){
					$('span.glyphicon').remove();
					$('.timeInfo').remove();
					proposal.day = [];
					proposal.time = "";
					timeSet = false;
					defineProposal();
				}	
				
			});
			
		
			if( !($( "input[class=showday]:checked" ).length) ){
				$( '.showTime' ).empty();
			}
			
		});		
		
		function checkTime( proposalTime, timeToCheck ){
	
			var daysToCheck = [];
			var tmpArray = [];
			var dayCounter1 = 0;
			var dayCounter2 = 0;
			
			$( "input[class=showday]:checked" ).each( function(i, checkedInput){
				daysToCheck[i] = this.name;
				dayCounter1++;
			});
			
			for(var checkDay in daysToCheck){
				
				for(var day in proposalTime){
				
					if(Array.isArray(proposalTime[day])){ // In einem Spielplan-Objekt sind nur die Tag Arrays
						// console.log("day: "+day);
						// console.log("daysToCheck[checkDay]: "+daysToCheck[checkDay]);
						if( day == daysToCheck[checkDay] ){
							
							tmpArray = proposalTime[day];

							if( $.inArray(timeToCheck, tmpArray) > -1 ){
								dayCounter2++;
								
							}
							
						}
					}
				
				}
			}
	
			// console.log("dayCounter1: "+dayCounter1);
			// console.log("dayCounter2: "+dayCounter2);
			
			if(dayCounter1 === dayCounter2){
				proposal.time = timeToCheck;
				timeSet = true;
			}
			else {
				timeSet = false;				
			}
			
		}
		
		function defineProposal(){
		
			if( $('div').filter($( ".proposal0" )).length && $('div').filter($( ".proposal1" )).length && $('div').filter($( ".proposal2" )).length && !($('input:checked').filter($( ".showday" )).length) ){
				$(".proposalInfo").empty();
				$(".proposalInfo").html("Wähle bitte noch einen Spieltag");
			}
			if( $('div').filter($( ".proposal0" )).length && $('div').filter($( ".proposal1" )).length && $('input:checked').filter($( ".showday" )).length && $('div').filter($( ".proposal2" )).length && timeSet !== true ){
				$(".proposalInfo").empty();
				$(".proposalInfo").html("Wähle bitte noch eine Uhrzeit");
			}
			if( $('div').filter($( ".proposal0" )).length && $('div').filter($( ".proposal1" )).length && $('div').filter($( ".proposal2" )).length && timeSet === true ){
				$(".proposalInfo").empty();
				$( ".submitProposal" ).css("display", "inline-block");
				$( ".selectUser" ).css("display", "inline-block");
				
				$( '.selectUserForm' ).remove();
				$( '.selectUser' ).append(	'<form class="selectUserForm" action="proposalView" method="get">'+
												'<label for="userID">User:</label></br>'+
												'<select name="userID">'+
													'<option value="1">Alice</option>'+
													'<option value="2">Bob</option>'+
													'<option value="3">Albert</option>'+
												'</select>'+
												'<input class="submitProposal" type="submit" value="Fertig mit Auswahl"/>'+
											'</form>' );
				
				$( "select" ).change(function () { 
					proposal.userID = $( 'option:selected' ).val();
				}).change();
				
				$(".selectUserForm").submit(function(e) {
					var self = this;
					e.preventDefault();
					
					var proposalID = "";
					
                        $.ajax({
                                url: '/vorschlaege',
                                method: 'POST',
								async: false,
                                data: JSON.stringify(proposal),
                                contentType: 'application/json',
                                success: function(response) {
                                        console.log("Response: "+JSON.stringify(response));
										proposalID = response.vorschlagID;
										
                                }

                        });
						
						window.location.href = "proposalView?"+ $ ( ".selectUserForm" ).serialize() + "&vorschlagID=" + proposalID;
						
				});				
				
				$( ".submitProposal" ).click(function() {
					
				});
			}
			else {
				$(".submitProposal").css("display", "none");
				$(".selectUser").css("display", "none");
			}
		}
		
		$( ".searchReset" ).click(function() {
			counter = 0;
			for(var i = 0; i < 3; i++){
				priority[i] =	{	
									"searchPointer" : "",
									"list" : "",
									"classPointer" : ""
								};
			}
			$('.cineResults').empty();
			$('.movieResults').empty();			
			$('.timeResults').empty();		
			for(var i = 0; i < 3; i++){
				if( $('div').filter($( "[class$='prio"+i+"']" )).length ){
					$('div').filter($( "[class$='prio"+i+"']" )).removeClass("prio"+i);
				}
			}
			$( "div.locked" ).remove();
			$( "div.proposal0" ).remove();
			$( "div.proposal1" ).remove();
			$( "div.proposal2" ).remove();
			
			$(".proposalInfo").empty();
			
			proposalPrio0listPoint = "";
			proposalPrio1listPoint = "";
			proposalPrio2listPoint = "";
			
			timeSet = false;
			defineProposal();			
			
		});

		function pointerView(){
			console.log("PointerView - Counter: "+counter);
			console.log("priority[0].searchPointer: "+priority[0].searchPointer);
			console.log("priority[0].classPointer: "+priority[0].classPointer);
			console.log("priority[1].searchPointer: "+priority[1].searchPointer);
			console.log("priority[1].classPointer: "+priority[1].classPointer);	
			console.log("priority[2].searchPointer: "+priority[2].searchPointer);
			console.log("priority[2].classPointer: "+priority[2].classPointer);	
		}
		
	}); 
    </script>
</head>
<body class="container">

    <header>
        <% include ../partials/header %>

    </header>

    <main>

		<%include ../partials/main-heading %>
		
		<div class="defineProposal">
			<h4>Erstelle einen Vorschlag</h4>
			<div class="proposalInfo"></div>
			<div class="defineProposalContent"></div>
			<div class="selectUser"></div>
		</div>
		
		<div class="categories">
			<div class="category cineBox">
				<%include ../partials/cine-form %>
				<ul class="cineResults"></ul>
			</div>
			
			<div class="category movieBox">
				<%include ../partials/movie-form %>	
				<ul class="movieResults"></ul>
			</div>
			
			<div class="category timeBox">
				<%include ../partials/time-form %>
				<ul class="timeResults"></ul>		
			</div>
		</div>
		<div class="searchReset"><strong>Reset search<strong></div>
		
			
    </main>

    <footer>
        <% include ../partials/footer %>
    </footer>

</body>
</html>
